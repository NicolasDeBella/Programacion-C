/*
Pedir el ingreso de 10 números enteros entre -1000 y 1000. Determinar:
Cantidad de positivos y negativos.
Sumatoria de los pares.
El mayor de los impares.
Listado de los números ingresados.
Listado de los números pares.
Listado de los números de las posiciones impares.

 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void imprimirArray (int array[], int longitud);
int inicializarArray (int array[], int len, int numero);
void cargarArray(int array[], int longitud);
int cantidadPostivosYNegativos (int array[], int longitud);

int main(void) {
	setbuf(stdout, NULL);
	int numeros[10];
	int contadorPositivos=0;
	int contadorNegativos=0;
	int retorno;


	cargarArray(numeros,10);
	cargarArray(numeros,10);
	retorno=cantidadPostivosYNegativos(numeros,10);

	if(retorno==0)
	{

		contadorPositivos++;
		printf("Los numeros positivos son %d",contadorPositivos);
	}else
	{
		contadorNegativos++;
		printf("Los numeros negativos son: %d",contadorNegativos);
	}






	imprimirArray(numeros,10);
















	return EXIT_SUCCESS;
}

int inicializarArray (int array[], int len, int numero)
{
	int retorno=0;
	int i=0;


	if(array!=NULL && len>0)
	{
		for(i=0;i<len;i++)
		{
			array[i]=numero;
		}

	}
	return retorno;
}

void cargarArray(int array[], int longitud)
{
	int i;
	for(i=0;i<longitud;i++)
	{
		printf("Ingrese 10 numeros: ");
		scanf("%d",&array[i]);
	}
}

void imprimirArray (int array[], int longitud)//por referencia, puedo leer o escribir//
{
	int i;
	for(i=0;i<longitud;i++)
	{
		printf("%d",array[i]);
	}
}

float promediarArray(int array[], int longitud)
{
	int resultado;
	int i;
	int acumulador=0;
	for(i=0;i<longitud;i++)
	{
		acumulador=acumulador+array[i];
	}
	resultado=acumulador/longitud;

	return resultado;
}

int cantidadPostivosYNegativos (int array[], int longitud)
{
	int retorno=0;
	int i;
	int acumuladorPositivo=0;
	int acumuladorNegativo=0;
	if(array!=NULL && longitud>=0)
	{
		for(i=0;i<longitud;i++)
		{
			if(array>0)
			{
				acumuladorPositivo++;
				retorno=0;
			} else
			{acumuladorNegativo++;
			retorno=-1;
			}

		}

	}
	return retorno;
}
